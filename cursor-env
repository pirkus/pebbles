#!/bin/bash

# Cursor Environment Runner - Shell wrapper
# This script runs environment setup from .cursor/environment.json

CURSOR_ENV_FILE=".cursor/environment.json"

# Check if jq is available for JSON parsing
if ! command -v jq &> /dev/null; then
    echo "Installing jq for JSON parsing..."
    sudo apt-get update -qq && sudo apt-get install -y jq
fi

# Check if environment.json exists
if [ ! -f "$CURSOR_ENV_FILE" ]; then
    echo "Error: $CURSOR_ENV_FILE not found!"
    exit 1
fi

# Function to run startup commands
run_startup() {
    echo "ðŸš€ Running startup commands from $CURSOR_ENV_FILE..."
    echo
    
    # Extract and run each startup command
    jq -r '.startup.commands[]? | if type == "object" then .command else . end' "$CURSOR_ENV_FILE" | while IFS= read -r cmd; do
        if [ -n "$cmd" ]; then
            echo "â†’ Running: $cmd"
            if eval "$cmd"; then
                echo "âœ“ Success"
            else
                echo "âš  Command failed, but continuing..."
            fi
            echo
        fi
    done
    
    echo "âœ… Startup completed!"
}

# Function to run a specific task
run_task() {
    local task_name="$1"
    
    # Check if task exists
    if ! jq -e ".tasks.\"$task_name\"" "$CURSOR_ENV_FILE" > /dev/null 2>&1; then
        echo "Error: Task '$task_name' not found!"
        echo
        echo "Available tasks:"
        jq -r '.tasks | keys[]' "$CURSOR_ENV_FILE" | while read -r task; do
            desc=$(jq -r ".tasks.\"$task\".description // \"No description\"" "$CURSOR_ENV_FILE")
            echo "  - $task: $desc"
        done
        exit 1
    fi
    
    echo "ðŸ“‹ Running task: $task_name"
    desc=$(jq -r ".tasks.\"$task_name\".description // \"No description\"" "$CURSOR_ENV_FILE")
    echo "   $desc"
    echo
    
    # Export environment variables for the task
    jq -r ".tasks.\"$task_name\".environmentVariables // {} | to_entries[] | \"export \\(.key)=\\(.value)\"" "$CURSOR_ENV_FILE" | while read -r export_cmd; do
        eval "$export_cmd"
    done
    
    # Run task commands
    jq -r ".tasks.\"$task_name\".commands[]?" "$CURSOR_ENV_FILE" | while IFS= read -r cmd; do
        if [ -n "$cmd" ]; then
            echo "â†’ Running: $cmd"
            if eval "$cmd"; then
                echo "âœ“ Success"
            else
                echo "âš  Command failed"
            fi
            echo
        fi
    done
    
    echo "âœ… Task '$task_name' completed!"
}

# Function to show quick commands
show_quick_commands() {
    echo "ðŸ“‹ Quick Commands:"
    jq -r '.quickCommands | to_entries[] | "  \\(.key): \\(.value)"' "$CURSOR_ENV_FILE"
}

# Main script logic
case "${1:-startup}" in
    startup)
        run_startup
        ;;
    task)
        if [ -z "$2" ]; then
            echo "Error: Task name required"
            echo "Usage: $0 task <task-name>"
            exit 1
        fi
        run_task "$2"
        ;;
    quick)
        show_quick_commands
        ;;
    help)
        echo "Cursor Environment Runner"
        echo
        echo "Usage:"
        echo "  $0 [command] [options]"
        echo
        echo "Commands:"
        echo "  startup        Run startup commands (default)"
        echo "  task <name>    Run a specific task"
        echo "  quick          Show quick commands"
        echo "  help           Show this help message"
        echo
        echo "Available tasks:"
        jq -r '.tasks | to_entries[] | "  - \\(.key): \\(.value.description // \"No description\")"' "$CURSOR_ENV_FILE"
        ;;
    *)
        echo "Invalid command: $1"
        echo "Use '$0 help' for usage information"
        exit 1
        ;;
esac