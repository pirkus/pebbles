# Cursor Environment Configuration for Pebbles Project

## Background Services

### MongoDB Setup
The project requires MongoDB to be running. You can start it using Docker Compose:

```bash
# Start MongoDB in the background
docker-compose up -d mongodb

# Or start all services (MongoDB + the app)
docker-compose up -d

# To stop services
docker-compose down
```

### Manual MongoDB Setup (Alternative)
If you prefer to run MongoDB directly:

```bash
# Install MongoDB (Arch Linux)
sudo pacman -S mongodb

# Start MongoDB service
sudo systemctl start mongodb
sudo systemctl enable mongodb

# Or run MongoDB manually
mongod --dbpath /var/lib/mongodb --port 27017
```

## Environment Variables
The application expects these environment variables:
- `MONGO_URI`: MongoDB connection string (default: `mongodb://localhost:27017/pebbles`)
- `PORT`: Application port (default: `8081`)

## Development Workflow
1. Start MongoDB using one of the methods above
2. Run tests: `clojure -X:test`
3. Start the application: `clojure -M:run`

## Database Connection
The application connects to MongoDB on:
- Host: `localhost` (or `mongodb` if using Docker Compose)
- Port: `27017`
- Database: `pebbles`

## Notes
- MongoDB data is persisted in a Docker volume when using Docker Compose
- The application includes test utilities for database setup/cleanup
- All tests use a fresh database instance to ensure isolation 